apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-options: ServerSideApply=true
  name: openshift-gitops
spec:
  extraConfig:
    accounts.rhdh: apiKey, login
  applicationInstanceLabelKey: argocd.argoproj.io/instance
  server:
    insecure: true
    route:
      enabled: true
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  resourceCustomizations: |
    PersistentVolumeClaim:
      health.lua: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.phase ~= nil then
            if obj.status.phase == "Pending" then
              hs.status = "Healthy"
              hs.message = obj.status.phase
              return hs
            end
            if obj.status.phase == "Bound" then
              hs.status = "Healthy"
              hs.message = obj.status.phase
              return hs
            end
          end
        end
        hs.status = "Progressing"
        hs.message = "Waiting for PVC to provision."
        return hs
    Job:
      health.lua: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.active ~= nil then
            if obj.status.active == "1" then
              hs.status = "Progressing"
              hs.message = obj.status.active .. " active job(s)."
              return hs
            end
          end
          if obj.status.succeeded ~= nil then
            if obj.status.succeeded == 1 then
              hs.status = "Healthy"
              hs.message = "Job completed successfully."
              return hs
            end
          end
        end
        hs.status = "Progressing"
        hs.message = "Waiting for Job to complete."
        return hs
  rbac:
    defaultPolicy: role:readonly
    policy: |
      g, openshift-gitops-admins, role:admin
      g, system:cluster-admins, role:admin
    scopes: "[groups]"
