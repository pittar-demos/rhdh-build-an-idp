apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${{values.componentId}}
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/component: ${{values.componentId}}
    app.kubernetes.io/instance: ${{values.componentId}}
    app.kubernetes.io/part-of: ${{values.componentId}}
    backstage.io/kubernetes-id: ${{values.componentId}}
  name: ${{values.componentId}}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ${{values.componentId}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${{values.componentId}}
        deployment: ${{values.componentId}}
        backstage.io/kubernetes-id: ${{values.componentId}}
    spec:
      containers:
        - image: ${{values.componentId}}:latest
          imagePullPolicy: Always
          name: ${{values.componentId}}
          env:
            - name: quarkus.datasource.username
              value: quarkus
            - name: quarkus.datasource.password
              value: quarkus
            - name: quarkus.datasource.jdbc.url
              value: jdbc:postgresql://postgresql:5432/quarkusdb
          resources:
            limits:
              memory: 512Mi
              cpu: '1'
            requests:
              memory: 512Mi
              cpu: 250m
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30